#pragma kernel CS_ChannelPacker
RWTexture2D<float4> _targetTexture2D;
Texture2D _sourceTexture2D;
float4 _targets[4];

[numthreads(1, 1, 1)]
void CS_ChannelPacker(uint3 id : SV_DispatchThreadID)
{
    float4 _sourcePixel = _sourceTexture2D[id.xy];
    float4 _targetPixel = _targetTexture2D[id.xy];
    
    // Overwrite
    _targetPixel[0] = _targetPixel[0] * (1.0 - _targets[0][0]) + _sourcePixel[0] * _targets[0][0];                                                                      // From SourcePixel[0](Red)   -> TargetPixel[0](Red)
    _targetPixel[1] = _targetPixel[1] * (1.0 - _targets[0][1]) + _sourcePixel[0] * _targets[0][1];                                                                      // From SourcePixel[0](Red)   -> TargetPixel[1](Green)
    _targetPixel[2] = _targetPixel[2] * (1.0 - _targets[0][2]) + _sourcePixel[0] * _targets[0][2];                                                                      // From SourcePixel[0](Red)   -> TargetPixel[2](Blue)
    _targetPixel[3] = _targetPixel[3] * (1.0 - _targets[0][3]) + _sourcePixel[0] * _targets[0][3];                                                                      // From SourcePixel[0](Red)   -> TargetPixel[3](Alpha)

    _targetPixel[0] = _targetPixel[0] * (1.0 - _targets[1][0]) + _sourcePixel[1] * _targets[1][0];                                                                      // From SourcePixel[1](Green) -> TargetPixel[0](Red)
    _targetPixel[1] = _targetPixel[1] * (1.0 - _targets[1][1]) + _sourcePixel[1] * _targets[1][1];                                                                      // From SourcePixel[1](Green) -> TargetPixel[1](Green)
    _targetPixel[2] = _targetPixel[2] * (1.0 - _targets[1][2]) + _sourcePixel[1] * _targets[1][2];                                                                      // From SourcePixel[1](Green) -> TargetPixel[2](Blue)
    _targetPixel[3] = _targetPixel[3] * (1.0 - _targets[1][3]) + _sourcePixel[1] * _targets[1][3];                                                                      // From SourcePixel[1](Green) -> TargetPixel[3](Alpha)

    _targetPixel[0] = _targetPixel[0] * (1.0 - _targets[2][0]) + _sourcePixel[2] * _targets[2][0];                                                                      // From SourcePixel[2](Blue)  -> TargetPixel[0](Red)
    _targetPixel[1] = _targetPixel[1] * (1.0 - _targets[2][1]) + _sourcePixel[2] * _targets[2][1];                                                                      // From SourcePixel[2](Blue)  -> TargetPixel[1](Green)
    _targetPixel[2] = _targetPixel[2] * (1.0 - _targets[2][2]) + _sourcePixel[2] * _targets[2][2];                                                                      // From SourcePixel[2](Blue)  -> TargetPixel[2](Blue)
    _targetPixel[3] = _targetPixel[3] * (1.0 - _targets[2][3]) + _sourcePixel[2] * _targets[2][3];                                                                      // From SourcePixel[2](Blue)  -> TargetPixel[3](Alpha)

    _targetPixel[0] = _targetPixel[0] * (1.0 - _targets[3][0]) + _sourcePixel[3] * _targets[3][0];                                                                      // From SourcePixel[3](Alpha) -> TargetPixel[0](Red)
    _targetPixel[1] = _targetPixel[1] * (1.0 - _targets[3][1]) + _sourcePixel[3] * _targets[3][1];                                                                      // From SourcePixel[3](Alpha) -> TargetPixel[1](Green)
    _targetPixel[2] = _targetPixel[2] * (1.0 - _targets[3][2]) + _sourcePixel[3] * _targets[3][2];                                                                      // From SourcePixel[3](Alpha) -> TargetPixel[2](Blue)
    _targetPixel[3] = _targetPixel[3] * (1.0 - _targets[3][3]) + _sourcePixel[3] * _targets[3][3];                                                                      // From SourcePixel[3](Alpha) -> TargetPixel[3](Alpha)

    _targetTexture2D[id.xy] = _targetPixel;
}

#pragma kernel CS_ClearRenderTexture2D
[numthreads(1, 1, 1)]
void CS_ClearRenderTexture2D(uint3 id: SV_DispatchThreadID)
{
    _targetTexture2D[id.xy] = float4(0, 0, 0, 0);
}